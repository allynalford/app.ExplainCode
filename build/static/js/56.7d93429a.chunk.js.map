{"version":3,"sources":["pages/Developer/Quick.js","pages/Developer/Section.js","pages/Developer/KeyFeatures.js","pages/Developer/Documentation.js","pages/Developer/index.js","common/config.js","common/endpoint.js","common/gaUtils.js","assets/images/digital/about.png"],"names":["config","require","Quick","props","hightlightWithLineNumbers","input","language","codeType","NodeJsCode","highlight","languages","js","split","map","line","i","join","PythonCode","python","SqlCode","sql","GoCode","go","setState","parse","WithLineNumbers","WithoutLineNumbers","Prism","javascript","state","activeTab","codeLanguage","codeLanguageID","NodeJsExplanation","PythonExplanation","SQLExplanation","GoExplanation","toggleTab","bind","toggleExplanation","this","nextProps","nextState","prevProps","prevState","tab","LiquidExplanation","name","console","log","Fragment","Container","className","Row","Col","xs","lg","mg","Nav","NavItem","NavLink","classnames","active","onClick","TabContent","TabPane","tabId","Button","e","target","style","marginTop","fontSize","href","WAITLIST_TEXT","Component","requestPromise","endpoint","Swal","index","Toast","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","email","inputsstatus","refby","undefined","handleSubmit","updateSlackChannel","SwalToast","search","window","location","URLSearchParams","get","title","text","icon","fire","requestOptions","callback","then","response","body","catch","error","event","a","preventDefault","validator","validate","postIAM","getDrip","getSubscriberApiUrl","data","exists","addSubscriberApiUrl","success","Event","_dcq","push","value","axios","post","process","JSON","stringify","withCredentials","transformRequest","headers","status","alert","md","InputGroup","Input","aria-label","type","id","onChange","disabled","placeholder","requiredtxt","required","InputGroupAddon","addonType","alt","src","bgimg","KeyFeatures","keyfeatures","hoverIcon","key","Card","CardBody","Documention","scrollNavigation","doc","document","documentElement","pageYOffset","scrollTop","clientTop","getElementById","classList","add","remove","initGA","PageView","removeEventListener","Helmet","content","property","viewBox","fill","xmlns","d","serverVars","drip","gtp3","post_ExplainFunction_PromptApiUrl","post_Summary_Prompt","post_Line_Prompt","post_Freeform_Prompt","auth0","updateProfile","profileAuth","completions","updateCompletionRating","userCompletionCount","snippets","saveSnippet","getSnippets","getSnippet","getSnippetsCount","updateSnippet","deleteSnippet","snippetsPagination","waitlistText","SAVE_SNIPPET_ENABLED","SAVE_EXPLANATION_ENABLED","getConfiguration","getGTP3","getAuth0","getCompletions","apigClientFactory","default","aws4","parseURL","generateApiClient","url","region","path","method","apigClient","newClient","invokeUrl","accessKey","secretKey","args","pathParams","pathTemplate","pathname","additionalParams","queryParams","_getSigned","signedRequest","sign","host","hostname","secretAccessKey","accessKeyId","_postSigned","payload","_get","_getApiClient","message","_getExternal","_post","req","_postApiClient","resp","invokeApi","getIAM","_postExternal","_postOptions","options","_putOptions","put","ReactGA","initialize","testMode","pageview","category","action","label"],"mappings":"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","file":"static/js/56.7d93429a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  Container,\r\n  Col,\r\n  Row,\r\n  TabContent,\r\n  Nav,\r\n  NavItem,\r\n  TabPane,\r\n  NavLink,\r\n  Button,\r\n} from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport { highlight, languages } from 'prismjs/components/prism-core';\r\nimport parse from \"html-react-parser\";\r\nimport 'prismjs/components/prism-bash';\r\nimport 'prismjs/components/prism-markup-templating';\r\nimport 'prismjs/components/prism-clike';\r\nimport 'prismjs/components/prism-markup';\r\nimport 'prismjs/components/prism-php';\r\nimport 'prismjs/components/prism-css';\r\nimport 'prismjs/components/prism-json';\r\nimport 'prismjs/components/prism-python';\r\nimport 'prismjs/components/prism-javascript';\r\nimport 'prismjs/components/prism-sql';\r\nimport 'prismjs/components/prism-go';\r\nimport 'prismjs/components/prism-scss';\r\nimport 'prismjs/themes/prism.css';\r\nimport './styles.css';\r\n\r\nconst config = require(\"../../common/config.js\");\r\nexport default class Quick extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab: '1',\r\n      codeLanguage: languages.js,\r\n      codeLanguageID: 'js',\r\n      NodeJsExplanation: false,\r\n      PythonExplanation: false,\r\n      SQLExplanation: false,\r\n      GoExplanation: false,\r\n      NodeJsCode: '',\r\n      PythonCode: '',\r\n      SqlCode: '',\r\n      GoCode: '',\r\n    };\r\n    this.toggleTab = this.toggleTab.bind(this);\r\n    this.hightlightWithLineNumbers = this.hightlightWithLineNumbers.bind(this);\r\n    this.WithoutLineNumbers = this.WithoutLineNumbers.bind(this);\r\n    this.toggleExplanation = this.toggleExplanation.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.hightlightWithLineNumbers();\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    //console.log('Instance shouldComponentUpdate lifecycle');\r\n    if (nextState !== this.state) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {}\r\n\r\n  toggleTab(tab) {\r\n    this.setState({\r\n      NodeJsExplanation: false,\r\n      PythonExplanation: false,\r\n      SQLExplanation: false,\r\n      LiquidExplanation: false,\r\n    });\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({\r\n        activeTab: tab,\r\n      });\r\n    }\r\n  }\r\n\r\n  toggleExplanation(name) {\r\n    switch (name) {\r\n      case 'nodejs':\r\n        if (this.state.NodeJsExplanation !== true) {\r\n          this.setState({\r\n            NodeJsExplanation: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            NodeJsExplanation: false,\r\n          });\r\n        }\r\n        break;\r\n      case 'python':\r\n        if (this.state.PythonExplanation !== true) {\r\n          this.setState({\r\n            PythonExplanation: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            PythonExplanation: false,\r\n          });\r\n        }\r\n        break;\r\n      case 'SQL':\r\n        if (this.state.SQLExplanation !== true) {\r\n          this.setState({\r\n            SQLExplanation: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            SQLExplanation: false,\r\n          });\r\n        }\r\n        break;\r\n      case 'go':\r\n        if (this.state.GoExplanation !== true) {\r\n          this.setState({\r\n            GoExplanation: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            GoExplanation: false,\r\n          });\r\n        }\r\n        break;\r\n      default:\r\n        console.log(`Sorry, we are out of ${name}.`);\r\n    }\r\n  }\r\n\r\n  hightlightWithLineNumbers = (input, language, codeType) => {\r\n    var NodeJsCode = highlight(\r\n      \"const fs = require('fs');\\n \\nvar jsonData = '{\\\"persons\\\":[{\\\"name\\\":\\\"John\\\",\\\"city\\\":\\\"New York\\\"},{\\\"name\\\":\\\"Phil\\\",\\\"city\\\":\\\"Ohio\\\"}]}';\\n \\n\\nvar jsonObj = JSON.parse(jsonData);\\nconsole.log(jsonObj);\\n \\nvar jsonContent = JSON.stringify(jsonObj);\\nconsole.log(jsonContent);\\n \\nfs.writeFile(\\\"output.json\\\", jsonContent, 'utf8', function (err) {\\n    if (err) {\\n        console.log(\\\"An error occured while writing JSON Object to File.\\\");\\n        return console.log(err);\\n    }\\n \\n    console.log(\\\"JSON file has been saved.\\\");\\n});\",\r\n      languages.js,\r\n    )\r\n      .split('\\n')\r\n      .map(\r\n        (line, i) =>\r\n          `<span class='editorLineNumber'>${i + 1}</span>${line}<br />`,\r\n      )\r\n      .join('\\n');\r\n    var PythonCode = highlight(\r\n      \"import math\\n\\n\\ndef isPerfectSquare(x):\\n\\ts = int(math.sqrt(x))\\n\\treturn s*s == x\\n\\n\\ndef isFibonacci(n):\\n\\n\\t# n is Fibinacci if one of 5*n*n + 4 or 5*n*n - 4 or both\\n\\t# is a perferct square\\n\\treturn isPerfectSquare(5*n*n + 4) or isPerfectSquare(5*n*n - 4)\\n\\t\\n\\nfor i in range(1,11):\\n\\tif (isFibonacci(i) == True):\\n\\t\\tprint i,\\\"is a Fibonacci Number\\\"\\n\\telse:\\n\\t\\tprint i,\\\"is a not Fibonacci Number \\\"\",\r\n      languages.python,\r\n    )\r\n      .split('\\n')\r\n      .map(\r\n        (line, i) =>\r\n          `<span class='editorLineNumber'>${i + 1}</span>${line}<br />`,\r\n      )\r\n      .join('\\n');\r\n    var SqlCode = highlight(\r\n      'DELETE FROM STATS\\nWHERE MONTH = 7\\nOR ID IN (SELECT ID FROM STATION\\nWHERE LONG_W < 90);\\n\\nDELETE FROM STATION WHERE LONG_W < 90;\\n\\nCOMMIT WORK;',\r\n      languages.sql,\r\n    )\r\n      .split('\\n')\r\n      .map(\r\n        (line, i) =>\r\n          `<span class='editorLineNumber'>${i + 1}</span>${line}<br />`,\r\n      )\r\n      .join('\\n');\r\n\r\n    var GoCode = highlight(\r\n      \"package main\\n\\nimport (\\n    \\\"bufio\\\"\\n    \\\"fmt\\\"\\n    \\\"net/http\\\"\\n)\\n\\nfunc main() {\\n\\n    resp, err := http.Get(\\\"http://gobyexample.com\\\")\\n    if err != nil {\\n        panic(err)\\n    }\\n    defer resp.Body.Close()\\n\\n    fmt.Println(\\\"Response status:\\\", resp.Status)\\n\\n    scanner := bufio.NewScanner(resp.Body)\\n    for i := 0; scanner.Scan() && i < 5; i++ {\\n        fmt.Println(scanner.Text())\\n    }\\n\\n    if err := scanner.Err(); err != nil {\\n        panic(err)\\n    }\\n}\",\r\n      languages.go,\r\n    )\r\n      .split('\\n')\r\n      .map(\r\n        (line, i) =>\r\n          `<span class='editorLineNumber'>${i + 1}</span>${line}<br />`,\r\n      )\r\n      .join('\\n');\r\n    this.setState({\r\n      NodeJsCode: parse(NodeJsCode),\r\n      PythonCode: parse(PythonCode),\r\n      SqlCode: parse(SqlCode),\r\n      GoCode: parse(GoCode)\r\n    });\r\n  };\r\n\r\n  WithLineNumbers = (input, language) => {\r\n    const Prism = require('prismjs');\r\n    Prism.highlight(input, language)\r\n      .split('\\n')\r\n      .map(\r\n        (line, i) =>\r\n          `<span class='editorLineNumber'>${i + 1}</span>${line}<br />`,\r\n      )\r\n      .join('\\n');\r\n  };\r\n\r\n  WithoutLineNumbers = (input, language) => {\r\n    const Prism = require('prismjs');\r\n    return Prism.highlight(input, Prism.languages.javascript, 'javascript');\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Container className=\"mt-100 mt-60\">\r\n          <Row className=\"row justify-content-center\">\r\n          <Row>\r\n            <Col xs={12}>\r\n              <div className=\"section-title mb-4 pb-2\">\r\n                <h2 className=\"title mb-4\">Your Code, Your Content</h2>\r\n                <p className=\"para-desc text mb-0\">\r\n                We aim to never claim copyright over explanations, since the explanations belong to their authors. We do not store or log your code, and we will never use your code as training data.</p>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n            <Col xs={12}>\r\n              <div className=\"section-title text-center mb-4 pb-2\">\r\n                <h2 className=\"text-primary\">How Explain Code App Works</h2>\r\n                <h3 className=\"title mb-4\">Let's dive in!</h3>\r\n                <p className=\"para-desc mx-auto text mb-0\">\r\n                Check out some samples of Explain Code app using GPT-3 (ai) to explain your code.\r\n                </p>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg={8} mg={10} className=\"mt-4 pt-2\">\r\n              <div className=\"bg-dark bg-white-dark p-4 rounded shadow\">\r\n                <Row>\r\n                  <Col lg={12}>\r\n                    <Nav className=\"nav-pills nav-tabs nav-justified flex-column flex-sm-row rounded bg-soft-light\">\r\n                      <NavItem className=\"hover-border\">\r\n                        <NavLink\r\n                          // className=\"nav-link nav-link-alt rounded active\"\r\n                          className={classnames(\r\n                            { active: this.state.activeTab === '1' },\r\n                            'rounded nav-link-alt',\r\n                          )}\r\n                          onClick={() => {\r\n                            this.toggleTab('1');\r\n                          }}\r\n                        >\r\n                          <div className=\"text-center\">\r\n                            <h4 className=\"title font-weight-normal mb-0\">\r\n                              NodeJS\r\n                            </h4>\r\n                          </div>\r\n                        </NavLink>\r\n                      </NavItem>\r\n\r\n                      <NavItem className=\"hover-border\">\r\n                        <NavLink\r\n                          // className=\"nav-link nav-link-alt rounded active\"\r\n                          className={classnames(\r\n                            { active: this.state.activeTab === '2' },\r\n                            'rounded nav-link-alt',\r\n                          )}\r\n                          onClick={() => {\r\n                            this.toggleTab('2');\r\n                          }}\r\n                        >\r\n                          <div className=\"text-center\">\r\n                            <h4 className=\"title font-weight-normal mb-0\">\r\n                              Python\r\n                            </h4>\r\n                          </div>\r\n                        </NavLink>\r\n                      </NavItem>\r\n\r\n                      <NavItem className=\"hover-border\">\r\n                        <NavLink\r\n                          // className=\"nav-link nav-link-alt rounded active\"\r\n                          className={classnames(\r\n                            { active: this.state.activeTab === '3' },\r\n                            'rounded nav-link-alt',\r\n                          )}\r\n                          onClick={() => {\r\n                            this.toggleTab('3');\r\n                          }}\r\n                        >\r\n                          <div className=\"text-center\">\r\n                            <h5 className=\"title font-weight-normal mb-0\">\r\n                              SQL\r\n                            </h5>\r\n                          </div>\r\n                        </NavLink>\r\n                      </NavItem>\r\n\r\n                      <NavItem className=\"hover-border\">\r\n                        <NavLink\r\n                          className={classnames(\r\n                            { active: this.state.activeTab === '4' },\r\n                            'rounded nav-link-alt',\r\n                          )}\r\n                          onClick={() => {\r\n                            this.toggleTab('4');\r\n                          }}\r\n                        >\r\n                          <div className=\"text-center\">\r\n                            <h5 className=\"title font-weight-normal mb-0\">\r\n                              GO\r\n                            </h5>\r\n                          </div>\r\n                        </NavLink>\r\n                      </NavItem>\r\n                    </Nav>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs={12}>\r\n                    <TabContent activeTab={this.state.activeTab}>\r\n                      <TabPane tabId=\"1\" className=\"fade show\">\r\n                        <div className=\"text fw-bold mb-0\">\r\n                          <div className=\"container__editor editor\">\r\n                            {this.state.NodeJsCode}\r\n                          </div>\r\n                        </div>\r\n                        <Button\r\n                          name=\"nodejs\"\r\n                          onClick={(e) => this.toggleExplanation(e.target.name)}\r\n                          className=\"btn btn-primary\"\r\n                          style={{ marginTop: '10px' }}\r\n                        >\r\n                          NodeJS Open Question\r\n                        </Button>\r\n                      </TabPane>\r\n                      <TabPane className=\"fade show\" tabId=\"2\">\r\n                        {/* {Prism.highlight(\"import time\\n\\ndef countdown(time_sec):\\n    while time_sec:\\n        mins, secs = divmod(time_sec, 60)\\n        timeformat = '{:02d}:{:02d}'.format(mins, secs)\\n        print(timeformat, end='\\\\r')\\n        time.sleep(1)\\n        time_sec -= 1\\n\\n    print(\\\"stop\\\")\\n\\ncountdown(5)\", Prism.languages.python, 'python')}     */}\r\n                        <div className=\"text fw-bold mb-0\">\r\n                          <div className=\"container__editor editor\">\r\n                            {this.state.PythonCode}\r\n                          </div>\r\n                        </div>\r\n                        <Button\r\n                          name=\"python\"\r\n                          onClick={(e) => this.toggleExplanation(e.target.name)}\r\n                          className=\"btn btn-primary\"\r\n                          style={{ marginTop: '10px' }}\r\n                        >\r\n                          Explain Python Code\r\n                        </Button>\r\n                      </TabPane>\r\n\r\n                      <TabPane className=\"fade show\" tabId=\"3\">\r\n                        <div className=\"text fw-bold mb-0\">\r\n                          <div className=\"container__editor editor\">\r\n                            {this.state.SqlCode}\r\n                          </div>\r\n                        </div>\r\n                        <Button\r\n                          name=\"SQL\"\r\n                          onClick={(e) => this.toggleExplanation(e.target.name)}\r\n                          className=\"btn btn-primary\"\r\n                          style={{ marginTop: '10px' }}\r\n                        >\r\n                          Explain SQL Code\r\n                        </Button>\r\n                      </TabPane>\r\n\r\n                      <TabPane className=\"fade show\" tabId=\"4\">\r\n                        <div className=\"text fw-bold mb-0\">\r\n                          <div className=\"container__editor editor\">\r\n                            {this.state.GoCode}\r\n                          </div>\r\n                        </div>\r\n                        <Button\r\n                          name=\"go\"\r\n                          onClick={(e) => this.toggleExplanation(e.target.name)}\r\n                          className=\"btn btn-primary\"\r\n                          style={{ marginTop: '10px' }}\r\n                        >\r\n                          Explain GO Code\r\n                        </Button>\r\n                      </TabPane>\r\n                      </TabContent>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n\r\n              {this.state.NodeJsExplanation === true ? (\r\n                <div>\r\n                  <h5>NodeJS Code GPT-3 Question: can you explain this code to me please?</h5>\r\n                  <div style={{fontSize: \"1.25rem\"}}>\r\n                   <ul className=\"list-unstyled text mb-0 mt-4\">\r\n                    <li className=\"list-item me-lg-5 me-4\">\r\n                      <span className=\"text-success h5 me-2\">\r\n                        <i className=\"uil uil-brackets-curly align-middle\"></i>\r\n                      </span>\r\n                      {`var jsonData = '{\"persons\":[{\"name\":\"John\",\"city\":\"New York\"},{\"name\":\"Phil\",\"city\":\"Ohio\"}]}';`}\r\n                    </li>\r\n                    <li className=\"list-item me-lg-5 me-4\">\r\n                      <span className=\"text-success h5 me-2\">\r\n                        <i className=\"uil uil-brackets-curly align-middle\"></i>\r\n                      </span>\r\n                      {`This code assigns the string value '{\"persons\":[{\"name\":\"John\",\"city\":\"New York\"},{\"name\":\"Phil\",\"city\":\"Ohio\"}]}' to the variable jsonData.`}\r\n                    </li>\r\n                    <li className=\"list-item me-lg-5 me-4\">\r\n                      <span className=\"text-success h5 me-2\">\r\n                        <i className=\"uil uil-brackets-curly align-middle\"></i>\r\n                      </span>\r\n                      {`var jsonObj = JSON.parse(jsonData);`}\r\n                    </li>\r\n                    <li className=\"list-item me-lg-5 me-4\">\r\n                      <span className=\"text-success h5 me-2\">\r\n                        <i className=\"uil uil-brackets-curly align-middle\"></i>\r\n                      </span>\r\n                      {`This code parses the JSON string in jsonData and assigns it to the variable jsonObj.`}\r\n                    </li>\r\n                    <li className=\"list-item me-lg-5 me-4\">\r\n                      <span className=\"text-success h5 me-2\">\r\n                        <i className=\"uil uil-brackets-curly align-middle\"></i>\r\n                      </span>\r\n                      {`console.log(jsonObj);`}\r\n                    </li>\r\n                    <li className=\"list-item me-lg-5 me-4\">\r\n                      <span className=\"text-success h5 me-2\">\r\n                        <i className=\"uil uil-brackets-curly align-middle\"></i>\r\n                      </span>\r\n                      {`This line prints the contents of the variable jsonObj to the console. In this case, the object stored in jsonObj contains two key-value pairs, 'name' and 'city', with the values 'John' and 'New York' respectively.`}\r\n                    </li>\r\n                    <li className=\"list-item me-lg-5 me-4\">\r\n                      <span className=\"text-success h5 me-2\">\r\n                        <i className=\"uil uil-brackets-curly align-middle\"></i>\r\n                      </span>\r\n                      {`var jsonContent = JSON.stringify(jsonObj);`}\r\n                    </li>\r\n                    <li className=\"list-item me-lg-5 me-4\">\r\n                      <span className=\"text-success h5 me-2\">\r\n                        <i className=\"uil uil-brackets-curly align-middle\"></i>\r\n                      </span>\r\n                      {`This code converts the object in jsonObj to a JSON string and assigns it to the variable jsonContent.`}\r\n                    </li>\r\n                    <li className=\"list-item me-lg-5 me-4\">\r\n                      <span className=\"text-success h5 me-2\">\r\n                        <i className=\"uil uil-brackets-curly align-middle\"></i>\r\n                      </span>\r\n                      {`console.log(jsonContent);`}\r\n                    </li>\r\n                    <li className=\"list-item me-lg-5 me-4\">\r\n                      <span className=\"text-success h5 me-2\">\r\n                        <i className=\"uil uil-brackets-curly align-middle\"></i>\r\n                      </span>\r\n                      {`This line prints the contents of the variable jsonContent to the console. In this case, the string value '{\"persons\":[{\"name\":\"John\",\"city\":\"New York\"},{\"name\":\"Phil\",\"city\":\"Ohio\"}]}' is printed.`}\r\n                    </li>\r\n                  </ul>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                ''\r\n              )}\r\n\r\n              {this.state.PythonExplanation === true ? (\r\n                <div>\r\n                  <h5>Python Code GPT-3 Explanation</h5>\r\n                  <div style={{fontSize: \"1.25rem\"}}>\r\n                  <ul className=\"list-unstyled text mb-0 mt-3\">\r\n                    <li className=\"list-item me-lg-5 me-4\" style={{marginTop: '7px'}}>\r\n                      <span className=\"text-success h5 me-2\">\r\n                        <i className=\"uil uil-brackets-curly align-middle\"></i>\r\n                      </span>\r\n                      The code imports the math library.\r\n                    </li>\r\n                    <li className=\"list-item me-lg-5 me-4\" style={{marginTop: '7px'}}>\r\n                      <span className=\"text-success h5 me-2\">\r\n                        <i className=\"uil uil-brackets-curly align-middle\"></i>\r\n                      </span>\r\n                      The code defines a function called isPerfectSquare. This function takes an input of x, and calculates the square root of x. The function then returns whether or not x*x is equal to x.\r\n                    </li>\r\n                    <li className=\"list-item me-lg-5 me-4\" style={{marginTop: '7px'}}>\r\n                      <span className=\"text-success h5 me-2\">\r\n                        <i className=\"uil uil-brackets-curly align-middle\"></i>\r\n                      </span>\r\n                      The code defines a function called isFibonacci. This function takes an input of n, and checks to see if one of the two equations 5*n*n + 4 or 5*n*n - 4 is a perfect square. If it is, then the function returns True.\r\n                    </li>\r\n                    <li className=\"list-item me-lg-5 me-4\" style={{marginTop: '7px'}}>\r\n                      <span className=\"text-success h5 me-2\">\r\n                        <i className=\"uil uil-brackets-curly align-middle\"></i>\r\n                      </span>\r\n                      The code runs a loop from 1 to 11, and checks to see if each number is a Fibonacci number. If it is, the code prints the number out. If it is not, the code prints the number out followed by \"is not a Fibonacci number\".\r\n                    </li>\r\n                  </ul>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                ''\r\n              )}\r\n\r\n              {this.state.SQLExplanation === true ? (\r\n                <div>\r\n                  <h5>SQL Code GPT-3 Explanation</h5>\r\n                  <div style={{fontSize: \"1.25rem\"}}>\r\n                  <ul className=\"list-unstyled text mb-0 mt-4\">\r\n                    <li className=\"list-item me-lg-5 me-4\">\r\n                      <span className=\"text-success h5 me-2\">\r\n                        <i className=\"uil uil-brackets-curly align-middle\"></i>\r\n                      </span>\r\n                      First, we delete all the rows from the STATS table that\r\n                      have a month value of 7 or have an ID within the table\r\n                      STATION with longitude value less than 90.\r\n                    </li>\r\n                    <li className=\"list-item me-lg-5 me-4\">\r\n                      <span className=\"text-success h5 me-2\">\r\n                        <i className=\"uil uil-brackets-curly align-middle\"></i>\r\n                      </span>\r\n                      Next, we delete all the rows from the STATION table that\r\n                      have a longitude value less than 90.\r\n                    </li>\r\n                    <li className=\"list-item me-lg-5 me-4\">\r\n                      <span className=\"text-success h5 me-2\">\r\n                        <i className=\"uil uil-brackets-curly align-middle\"></i>\r\n                      </span>\r\n                      Finally, we commit the changes to the database.\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                  </div>\r\n              ) : (\r\n                ''\r\n              )}\r\n               {this.state.GoExplanation === true ? (\r\n                 <div>\r\n                   <h5>GO Code GPT-3 Explanation</h5>\r\n                <div style={{fontSize: \"1.25rem\"}}>\r\n                  <ul className=\"list-unstyled text mb-0 mt-4\">\r\n                    <li className=\"list-item me-lg-5 me-4\">\r\n                      <span className=\"text-success h5 me-2\">\r\n                        <i className=\"uil uil-brackets-curly align-middle\"></i>\r\n                      </span>\r\n                      Get the http.Response object from the http.Get call.\r\n                    </li>\r\n                    <li className=\"list-item me-lg-5 me-4\">\r\n                      <span className=\"text-success h5 me-2\">\r\n                        <i className=\"uil uil-brackets-curly align-middle\"></i>\r\n                      </span>\r\n                      Check if there was an error in the http.Get call.\r\n                    </li>\r\n                    <li className=\"list-item me-lg-5 me-4\">\r\n                      <span className=\"text-success h5 me-2\">\r\n                        <i className=\"uil uil-brackets-curly align-middle\"></i>\r\n                      </span>\r\n                      Defer the closing of the http.Response Body.\r\n                    </li>\r\n                    <li className=\"list-item me-lg-5 me-4\">\r\n                      <span className=\"text-success h5 me-2\">\r\n                        <i className=\"uil uil-brackets-curly align-middle\"></i>\r\n                      </span>\r\n                      Print the response status.\r\n                    </li>\r\n                    <li className=\"list-item me-lg-5 me-4\">\r\n                      <span className=\"text-success h5 me-2\">\r\n                        <i className=\"uil uil-brackets-curly align-middle\"></i>\r\n                      </span>\r\n                      Create a new Scanner for the http.Response Body.\r\n                    </li>\r\n                    <li className=\"list-item me-lg-5 me-4\">\r\n                      <span className=\"text-success h5 me-2\">\r\n                        <i className=\"uil uil-brackets-curly align-middle\"></i>\r\n                      </span>\r\n                      Loop through the scanner and print the first 5 lines.\r\n                    </li>\r\n                    <li className=\"list-item me-lg-5 me-4\">\r\n                      <span className=\"text-success h5 me-2\">\r\n                        <i className=\"uil uil-brackets-curly align-middle\"></i>\r\n                      </span>\r\n                      Check for errors from the scanner.\r\n                    </li>\r\n                    <li className=\"list-item me-lg-5 me-4\">\r\n                      <span className=\"text-success h5 me-2\">\r\n                        <i className=\"uil uil-brackets-curly align-middle\"></i>\r\n                      </span>\r\n                      The http.Response Body is closed.\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                 </div>\r\n              ) : (\r\n                ''\r\n              )}\r\n              <div className=\"buy-button\" style={{ marginTop: '15px' }}>\r\n                <a href=\"#emailAddress\" className=\"btn btn-pills btn-primary\">\r\n                {config.WAITLIST_TEXT}\r\n                </a>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col , Button, InputGroupAddon, Input, InputGroup} from \"reactstrap\";\r\n//Import Icons\r\nimport FeatherIcon from \"feather-icons-react\";\r\n//import Images\r\nimport bgimg from \"../../assets/images/digital/about.png\";\r\nimport { Event } from '../../common/gaUtils.js';\r\nimport axios from \"axios\";\r\nconst requestPromise = require('request-promise');\r\nconst endpoint = require(\"../../common/endpoint.js\");\r\nconst config = require(\"../../common/config.js\");\r\nvar Swal = require(\"sweetalert2\");\r\nexport default class index extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      inputsstatus: false,\r\n      refby: undefined\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.updateSlackChannel = this.updateSlackChannel.bind(this);\r\n    this.Toast = this.Toast.bind(this);\r\n    this.SwalToast = this.SwalToast.bind(this);\r\n  };\r\n\r\n  componentDidMount() {\r\n\r\n    const search = window.location.search;\r\n    const refby = new URLSearchParams(search).get(\"ref\");\r\n    this.setState({ refby });\r\n  }\r\n\r\n  // Make sure to remove the DOM listener when the component is unmounted.\r\n  componentWillUnmount() {\r\n    \r\n  }\r\n\r\n  Toast = Swal.mixin({\r\n    toast: true,\r\n    position: 'center',\r\n    showConfirmButton: false,\r\n    timer: 6500,\r\n    timerProgressBar: true,\r\n    didOpen: (toast) => {\r\n        toast.addEventListener('mouseenter', Swal.stopTimer)\r\n        toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n    }\r\n});\r\n\r\n      SwalToast(title, text, icon) {\r\n        this.Toast.fire({\r\n          icon,\r\n          title,\r\n          text\r\n        });\r\n      };\r\n\r\n\r\n  request(requestOptions, callback) {\r\n    if (callback) {\r\n      return requestPromise(requestOptions).then((response) => {\r\n        const { body } = response;\r\n        callback(null, response, body);\r\n      }).catch((error) => {\r\n        callback(error, null, null);\r\n      });\r\n    }\r\n    return requestPromise(requestOptions);\r\n  }\r\n\r\n\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.setState({inputsstatus: true});\r\n    var validator = require(\"email-validator\");\r\n    var emailValid = validator.validate(this.state.email); \r\n\r\n    if(emailValid !== true){\r\n      console.log(\"Invalid Email Address\");\r\n      this.SwalToast(\"Error\",\"Invalid Email Address\", 'error');\r\n      this.setState({inputsstatus: false});\r\n    }else{\r\n        try {\r\n          const check = await endpoint.postIAM(\r\n            config.getDrip().getSubscriberApiUrl,\r\n            { email: this.state.email },\r\n          );\r\n          if (check.data.exists === false) {\r\n            const addUser = await endpoint.postIAM(\r\n              config.getDrip().addSubscriberApiUrl,\r\n              { email: this.state.email, refby: this.state.refby },\r\n            );\r\n            if (addUser.data.success === true) {\r\n              Event('Waitlist', 'New Waitlist User Drip', 'drip added');\r\n              this.SwalToast(\r\n                \"You've Joined\",\r\n                'Thank You for Joining Early Access',\r\n                'info',\r\n              );\r\n              await this.updateSlackChannel();\r\n              window._dcq = window._dcq || [];\r\n              window._dcq.push(['track', 'Waitlist Signup', { value: 999 }]);\r\n              this.setState({ inputsstatus: false });\r\n            } else {\r\n              this.SwalToast('Error', \"error adding user\", 'error');\r\n              this.setState({inputsstatus: false});\r\n            }\r\n          } else {\r\n            this.SwalToast('Error', 'User already Exists', 'error');\r\n            this.setState({inputsstatus: false});\r\n          }\r\n        } catch (e) {\r\n          console.error('Add User', e);\r\n          this.setState({inputsstatus: false});\r\n        }\r\n      \r\n    }\r\n}\r\n\r\n\r\n  async updateSlackChannel() {\r\n\r\n   \r\n    Event(\"Waitlist\", \"New Waitlist User Slack\", \"Slack Channel\")\r\n\r\n    //process.env.REACT_APP_SLACK_CONTACTUS_WEBHOOK\r\n    let res = await axios.post(process.env.REACT_APP_SLACK_CONTACTUS_WEBHOOK, JSON.stringify({\r\n        \"text\": `Email Address: ${this.state.email}`,\r\n    }), {\r\n        withCredentials: false,\r\n        transformRequest: [(data, headers) => {\r\n            delete headers.post[\"Content-Type\"]\r\n            return data\r\n        }]\r\n    })\r\n\r\n    if (res.status === 200) {\r\n        //clear state so text boxes clear\r\n        this.setState({ email: ''});\r\n    } else {\r\n        alert(\"There was an error.  Please try again later.\")\r\n    }\r\n}\r\n\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <section className=\"bg-half bg-light d-table w-100\">\r\n          <Container>\r\n            <Row className=\"align-items-center\">\r\n              <Col md={6} xs={12}>\r\n                <div className=\"title-heading\">\r\n                  <span className=\"badge rounded-pill bg-soft-primary\">\r\n                    Beta\r\n                  </span>\r\n                  <h1 className=\"fw-bold mt-2 mb-3\">\r\n                    Understand code <br /> like never before.\r\n                  </h1>\r\n                  <p className=\"para-desc text\">\r\n                  Blast through code with easy-to-understand code explanations, code summarization, class breakdowns and more.\r\n                  </p>\r\n                  <div className=\"subcribe-form mt-4 pt-2\">\r\n                    <InputGroup>\r\n                      <Input\r\n                        aria-label=\"Email Address to join waitlist\"\r\n                        type=\"email\"\r\n                        name=\"emailAddress\"\r\n                        id=\"emailAddress\"\r\n                        onChange={e => this.setState({ email: e.target.value })}\r\n                        value={this.state.email}\r\n                        disabled={this.state.inputsstatus}\r\n                        placeholder=\"Enter your Email Address\"\r\n                        requiredtxt=\"A Valid Email Address is required\"\r\n                        required\r\n                      />\r\n                      <InputGroupAddon addonType=\"append\">\r\n                        <Button disabled={this.state.inputsstatus} onClick={this.handleSubmit} className=\"btn btn-primary\" type=\"submit\">\r\n                        {config.WAITLIST_TEXT + \" \"}\r\n                          <i>\r\n                            <FeatherIcon\r\n                              icon=\"user-plus\"\r\n                              className=\"fea icon-sm\"\r\n                              alt={config.WAITLIST_TEXT}\r\n                            />\r\n                          </i>\r\n                        </Button>\r\n                      </InputGroupAddon>\r\n                    </InputGroup>\r\n                          {/* <Form className=\"ms-0\">\r\n                            <FormGroup>\r\n                              <Input\r\n                                type=\"text\"\r\n                                id=\"course\"\r\n                                name=\"emailaddress\"\r\n                                onChange={ e => this.setState({email: e.target.value})}\r\n                                className=\"rounded\"\r\n                                placeholder=\"Enter your Email Address\"\r\n                              />\r\n                              <Button className=\"btn btn-primary\" type=\"submit\">\r\n                              Join the Waitlist{\" \"}\r\n                                <i>\r\n                                  <FeatherIcon\r\n                                    icon=\"user-plus\"\r\n                                    className=\"fea icon-sm\"\r\n                                  />\r\n                                </i>\r\n                              </Button>\r\n                            </FormGroup>\r\n                          </Form> */}\r\n                        </div>\r\n                  {/* <div className=\"mt-4 pt-2\">\r\n                    <Link\r\n                      to=\"#\"\r\n                      className=\"btn btn-outline-primary\"\r\n                    >\r\n                      Join the Waitlist\r\n                    </Link>\r\n                  </div> */}\r\n                  {/* <p className=\"text-muted mb-0 mt-3\">Current Version: v3.1</p> */}\r\n                </div>\r\n              </Col>\r\n\r\n              <div className=\"col-md-6 mt-4 pt-2 mt-sm-0 pt-sm-0\">\r\n                <img src={bgimg} className=\"img-fluid d-block mx-auto\" alt=\"Let Explain Code App teach you how to create code with ease and excitement!\" />\r\n              </div>\r\n            </Row>\r\n          </Container>\r\n        </section>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Card, CardBody, Col, Container, Row } from \"reactstrap\";\r\nconst config = require(\"../../common/config.js\");\r\nexport default class KeyFeatures extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      keyfeatures: [\r\n        {\r\n          id: 1,\r\n          icon: \"uil uil-line-spacing d-block rounded h3 mb-0\",\r\n          hoverIcon: \"uil uil-line-spacing text-primary full-img\",\r\n          title: \"Explained Line By Line\",\r\n          text: \"Learn to code by breaking it down into lines and chunks. Explain Code gives you line by line explanation of code. It helps you in learning programming concepts and improves your coding skills.\"\r\n        },\r\n        {\r\n          id: 2,\r\n          icon: \"uil uil-document-layout-left d-block rounded h3 mb-0\",\r\n          hoverIcon: \"uil uil-document-layout-left text-primary full-img\",\r\n          title: \"Code Summarization\",\r\n          text: \"Reduce the time to understand code by summarizing it into one containing code and description. Now you don't need to read long code to understand it.\"\r\n        },\r\n        {\r\n          id: 3,\r\n          icon: \"uil uil-code-branch d-block rounded h3 mb-0\",\r\n          hoverIcon: \"uil uil-code-branch text-primary full-img\",\r\n          title: \"Class Breakdown\",\r\n          text: \"Understanding the purpose of a class can be difficult. But not anymore, Break down classes to help you gain an in depth knowledge of what the class is intended to do, what they call and more.\"\r\n        },\r\n        {\r\n          id: 4,\r\n          icon: \"uil  uil-comment-question d-block rounded h3 mb-0\",\r\n          hoverIcon: \"uil  uil-comment-question text-primary full-img\",\r\n          title: \"Open Questions\",\r\n          text: \"Don’t know what a block of code does? Paste your code into the editor and ask an open question about it. It’s that simple!. The built in AI understands code like never before.\"\r\n        },\r\n      ],\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Container>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <div className=\"section-title mb-4 pb-2\">\r\n                <h4 className=\"title mb-4\">First Release Features</h4>\r\n                <p className=\"para-desc text mb-0\">\r\n                Explain Code makes code easy to understand. With Explain Code, you can quickly save time on code that's difficult to digest. We empower developers to go from I don't understand the code to this is how it works in under five minutes!</p>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\" align-items-center\">\r\n            {this.state.keyfeatures.map((keyfeatures, key) => (\r\n              <Col lg={3} md={6} className=\"mt-4 pt-2\" key={key}>\r\n                <Card className=\"border-0 features feature-clean course-feature p-4 overflow-hidden shadow\">\r\n                  <div className=\"icons text-primary text-center\">\r\n                    <i className={keyfeatures.icon}></i>\r\n                  </div>\r\n                  <CardBody className=\"p-0 mt-4\">\r\n                    <a href=\"#emailAddress\" alt=\"add email address for early access\" className=\"title h5 text-dark\">\r\n                      {keyfeatures.title}\r\n                    </a>\r\n                    <p className=\"text mt-2\">\r\n                    {keyfeatures.text}\r\n                  </p>\r\n                    <a href=\"#emailAddress\" className=\"text-primary read-more\">\r\n                    {config.WAITLIST_TEXT + \" \"} <i className=\"mdi mdi-chevron-right\"></i>\r\n                    </a>\r\n                    <i className={keyfeatures.hoverIcon}></i>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </Container>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row } from \"reactstrap\";\r\nconst config = require(\"../../common/config.js\");\r\n//import image\r\n//import integration from '../../assets/images/integration/1.png';\r\n\r\nexport default class Documention extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Container className=\"mt-100 mt-60\">\r\n          <Row className=\"align-items-center\">\r\n            {/* <Col lg={5} md={6} className=\"order-1 order-md-2\">\r\n              <img src={integration} className=\"img-fluid\" alt=\"\" />\r\n            </Col> */}\r\n\r\n            <div className=\"col-lg-7 col-md-6 order-2 order-md-1 mt-4 mt-sm-0 pt-2 pt-sm-0\">\r\n              <div className=\"section-title me-lg-5\">\r\n                <h4 className=\"title mb-4\">\r\n                  What Explain Code App will support\r\n                </h4>\r\n                <p className=\"text\">\r\n                We have decided to start out supporting Node JS, Python, Go, and SQL. Once we have an established a strong community around our initial languages, we will rapidly grow and support new languages for all developers. \r\n                </p>\r\n                <p className=\"text\"> If you can code using at least 1 of 3 of these languages, then you'll be able to easily build your first database driven web application in just a few minutes.</p>\r\n                <ul className=\"list-unstyled text\">\r\n                  <li className=\"mb-0\">\r\n                    <span className=\"text-primary h5 me-2\">\r\n                      <i className=\"uil uil-check-circle align-middle\"></i>\r\n                    </span>\r\n                    Easily explain NodeJS code\r\n                  </li>\r\n                  <li className=\"mb-0\">\r\n                    <span className=\"text-primary h5 me-2\">\r\n                      <i className=\"uil uil-check-circle align-middle\"></i>\r\n                    </span>\r\n                    Summarize Python code\r\n                  </li>\r\n                  <li className=\"mb-0\">\r\n                    <span className=\"text-primary h5 me-2\">\r\n                      <i className=\"uil uil-check-circle align-middle\"></i>\r\n                    </span>\r\n                    Go (Golang) code line-by-line\r\n                  </li>\r\n                  <li className=\"mb-0\">\r\n                    <span className=\"text-primary h5 me-2\">\r\n                      <i className=\"uil uil-check-circle align-middle\"></i>\r\n                    </span>\r\n                    Review SQL (Structured Query Language) code\r\n                  </li>\r\n                </ul>\r\n                <div className=\"mt-4\">\r\n                  <a href=\"#emailAddress\" className=\"btn btn-primary\">\r\n                  {config.WAITLIST_TEXT}\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Row>\r\n        </Container>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Quick from './Quick';\r\nimport Section from './Section';\r\nimport KeyFeatures from './KeyFeatures';\r\nimport Documentation from './Documentation';\r\nimport { PageView, initGA } from '../../common/gaUtils.js';\r\nimport { Helmet } from \"react-helmet\";\r\nexport default class index extends Component {\r\n  componentDidMount() {\r\n    document.body.classList = '';\r\n    window.addEventListener('scroll', this.scrollNavigation, true);\r\n    initGA();\r\n    PageView();\r\n  }\r\n\r\n  // Make sure to remove the DOM listener when the component is unmounted.\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.scrollNavigation, true);\r\n  }\r\n\r\n  scrollNavigation = () => {\r\n    var doc = document.documentElement;\r\n    var top = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\r\n    if (top > 80) {\r\n      document.getElementById('topnav').classList.add('nav-sticky');\r\n    } else {\r\n      document.getElementById('topnav').classList.remove('nav-sticky');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Helmet>\r\n          <title>Explain Code App - Explanations for your code</title>\r\n          <meta name=\"description\"\r\n            content=\"The Explain Code App uses GPT-3 to automatically learn from open source code repositories, understand unfamiliar programming constructs and explain difficult code in plain english.\" />\r\n          <meta name=\"keywords\"\r\n            content=\"Nodejs, Go, golang, SQL, Python, liquid, code, programming code, code translator, explain code, understand code, programming, javascript, java, GPT-3, code explainer, code review, code examples, code documentation, bad code examples, software examples, example code\" />\r\n          <meta name=\"twitter:title\"\r\n            content=\"Explain Code App lets you blast through code with easy-to-understand explanations\" />\r\n          <meta name=\"twitter:image:alt\" content=\"Explain Code App: a new way to read and understand code\" />\r\n          <meta property=\"og:title\" content=\"Explain Code App - Explanations for your code\" />\r\n          <meta property=\"og:description\" content=\"The Explain Code App uses GPT-3 to automatically learn from open source code repositories, understand unfamiliar programming constructs and explain difficult code in plain english.\" />\r\n        </Helmet>\r\n        <div id=\"maincontent\">\r\n          {/* Section */}\r\n          <Section />\r\n\r\n          {/* Partner \r\n            <Partners />\r\n            */}\r\n          <div className=\"position-relative\">\r\n            <div className=\"shape overflow-hidden text-white\">\r\n              <svg\r\n                viewBox=\"0 0 2880 48\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  d=\"M0 48H1437.5H2880V0H2160C1442.5 52 720 0 720 0H0V48Z\"\r\n                  fill=\"currentColor\"\r\n                ></path>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          <section className=\"section\">\r\n            <KeyFeatures />\r\n            <Quick />\r\n            <Documentation />\r\n          </section>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","const serverVars = {\r\n    drip: {\r\n      addSubscriberApiUrl: process.env.REACT_APP_BASE_API_URL + \"/drip/subscriber/add\",\r\n      getSubscriberApiUrl: process.env.REACT_APP_BASE_API_URL + \"/drip/subscriber/get\",   \r\n    },\r\n    gtp3: {\r\n      post_ExplainFunction_PromptApiUrl: process.env.REACT_APP_BASE_API_URL + \"/tool/function/explain\",\r\n      post_Summary_Prompt: process.env.REACT_APP_BASE_API_URL + \"/tool/summary\", \r\n      post_Line_Prompt: process.env.REACT_APP_BASE_API_URL + \"/tool/linebyline\",\r\n      post_Freeform_Prompt: process.env.REACT_APP_BASE_API_URL + \"/tool/freeform\",\r\n    },\r\n    auth0:{\r\n      updateProfile: process.env.REACT_APP_BASE_API_URL + \"/profile/update\",\r\n      profileAuth: process.env.REACT_APP_BASE_API_URL + \"/profile/auth\",\r\n    },\r\n    completions:{\r\n      updateCompletionRating: process.env.REACT_APP_BASE_API_URL + '/completions/rating/update',\r\n      userCompletionCount: process.env.REACT_APP_BASE_API_URL + '/completions/user/count'\r\n    },\r\n    snippets:{\r\n      saveSnippet: process.env.REACT_APP_BASE_API_URL + '/snippet/save',\r\n      getSnippets: process.env.REACT_APP_BASE_API_URL + '/snippets/user/',\r\n      getSnippet: process.env.REACT_APP_BASE_API_URL + '/snippet/',\r\n      getSnippetsCount: process.env.REACT_APP_BASE_API_URL + '/snippet/user/count/',\r\n      updateSnippet: process.env.REACT_APP_BASE_API_URL + '/snippet/update',\r\n      deleteSnippet: process.env.REACT_APP_BASE_API_URL + '/snippet/delete/',\r\n      snippetsPagination: process.env.REACT_APP_BASE_API_URL + '/snippets/user/pagination',\r\n    },\r\n    waitlistText: \"Early Access\"\r\n  };\r\n  \r\n  const localVars = {\r\n    drip: {\r\n      addSubscriberApiUrl: process.env.REACT_APP_BASE_API_URL + \"/drip/subscriber/add\",\r\n      getSubscriberApiUrl: process.env.REACT_APP_BASE_API_URL + \"/drip/subscriber/get\", \r\n    },\r\n    gtp3: {\r\n      post_ExplainFunction_Prompt: process.env.REACT_APP_BASE_API_URL + \"/tool/function/explain\",\r\n      post_Summary_Prompt: process.env.REACT_APP_BASE_API_URL + \"/tool/summary\", \r\n      post_Line_Prompt: process.env.REACT_APP_BASE_API_URL + \"/tool/linebyline\",\r\n      post_Freeform_Prompt: process.env.REACT_APP_BASE_API_URL + \"/tool/freeform\",\r\n    },\r\n    auth0:{\r\n      updateProfile: process.env.REACT_APP_BASE_API_URL + \"/profile/update\",\r\n      profileAuth: process.env.REACT_APP_BASE_API_URL + \"/profile/auth\",\r\n    },\r\n    completions:{\r\n      updateCompletionRating: process.env.REACT_APP_BASE_API_URL + '/completions/rating/update',\r\n      userCompletionCount: process.env.REACT_APP_BASE_API_URL + '/completions/user/count'\r\n    },\r\n    snippets:{\r\n      saveSnippet: process.env.REACT_APP_BASE_API_URL + '/snippet/save',\r\n      getSnippets: process.env.REACT_APP_BASE_API_URL + '/snippets/user/',\r\n      getSnippet: process.env.REACT_APP_BASE_API_URL + '/snippet/',\r\n      getSnippetsCount: process.env.REACT_APP_BASE_API_URL + '/snippet/user/count/',\r\n      updateSnippet: process.env.REACT_APP_BASE_API_URL + '/snippet/update',\r\n      deleteSnippet: process.env.REACT_APP_BASE_API_URL + '/snippet/delete/',\r\n      snippetsPagination: process.env.REACT_APP_BASE_API_URL + '/snippets/user/pagination',\r\n    },\r\n    waitlistText: \"Get Early Access\"\r\n  };\r\n\r\n  export const WAITLIST_TEXT = (process.env.NODE_ENV === 'production' ? serverVars.waitlistText : localVars.waitlistText)\r\n  export const SAVE_SNIPPET_ENABLED = process.env.REACT_APP_SAVE_SNIPPET_ENABLED;\r\n  export const SAVE_EXPLANATION_ENABLED = process.env.REACT_APP_SAVE_EXPLANATION_ENABLED;\r\n  \r\n  export function getConfiguration() {\r\n    if (process.env.NODE_ENV === 'production') {\r\n      return serverVars;\r\n    };\r\n    return localVars;\r\n  };\r\n  export function getDrip() {\r\n    if (process.env.NODE_ENV === 'production') {\r\n      return serverVars.drip;\r\n    };\r\n    return localVars.drip;\r\n  };\r\n\r\n  export function getGTP3() {\r\n    if (process.env.NODE_ENV === 'production') {\r\n      return serverVars.gtp3;\r\n    };\r\n    return localVars.gtp3;\r\n  };\r\n\r\n  \r\n  export function getAuth0() {\r\n    if (process.env.NODE_ENV === 'production') {\r\n      return serverVars.auth0;\r\n    }\r\n    return localVars.auth0;\r\n  }\r\n\r\n  export function getCompletions() {\r\n    if (process.env.NODE_ENV === 'production') {\r\n      return serverVars.completions;\r\n    }\r\n    return localVars.completions;\r\n  }\r\n\r\n  export function getSnippets() {\r\n    if (process.env.NODE_ENV === 'production') {\r\n      return serverVars.snippets;\r\n    }\r\n    return localVars.snippets;\r\n  }\r\n","import axios from 'axios';\r\n//import { aws4Interceptor } from \"aws4-axios\";\r\nconst apigClientFactory = require('aws-api-gateway-client').default;\r\nconst aws4  = require('aws4')\r\nconst parseURL = require(\"url-parse\")\r\n\r\n\r\nexport const generateApiClient = (url, region, path, method) => {\r\n    try {\r\n        var apigClient = apigClientFactory.newClient(\r\n            {\r\n                invokeUrl: url,\r\n                region: region,\r\n                accessKey: process.env.REACT_APP_KEY,\r\n                secretKey: process.env.REACT_APP_ACCESS,\r\n            });\r\n        return {\r\n            apigClient, args: {\r\n                pathParams: {},\r\n                pathTemplate: parseURL(path).pathname,\r\n                method: method,\r\n                additionalParams: {\r\n                    headers: {\r\n                        //\"Access-Control-Allow-Headers\": \"Access-Control-Allow-Headers, Origin, Accept, X-Requested-With, Content-Type, Access-Control-Allow-Origin, Access-Control-Request-Method, Access-Control-Request-Headers, Authorization\",\r\n                        //Origin: process.env.REACT_APP_BASE_ACCEPT,\r\n                        //\"Access-Control-Allow-Origin\": process.env.REACT_APP_BASE_ACCEPT,\r\n                        //Accept: process.env.REACT_APP_BASE_ACCEPT\r\n                    },\r\n                    queryParams: {\r\n                    }\r\n                },\r\n                body: ''\r\n            }\r\n        };\r\n\r\n    } catch (e) {\r\n        console.log(e);\r\n        throw e;\r\n    }\r\n};\r\n\r\n  export const _getSigned = (url) =>{\r\n    try{\r\n        let signedRequest = aws4.sign({\r\n            host: parseURL(url).hostname,\r\n            method: 'GET',\r\n            url: url,\r\n            path: parseURL(url).pathname\r\n        },\r\n            {\r\n                // assumes user has authenticated and we have called\r\n                // AWS.config.credentials.get to retrieve keys and\r\n                // session tokens\r\n                secretAccessKey: process.env.REACT_APP_ACCESS,\r\n                accessKeyId: process.env.REACT_APP_KEY\r\n                //sessionToken: AWS.config.credentials.sessionToken\r\n            });\r\n          \r\n          delete signedRequest.headers['Host']\r\n          delete signedRequest.headers['Content-Length']\r\n          \r\n          return axios(signedRequest)\r\n    }catch(e){\r\n        console.log(e);\r\n        throw e;\r\n    }\r\n  };\r\n\r\n  export const _postSigned = (url, payload) =>{\r\n    try{\r\n        let signedRequest = aws4.sign({\r\n            host: parseURL(url).hostname,\r\n            method: 'PUT',\r\n            url: url,\r\n            data: payload, // object describing the foo\r\n            body: JSON.stringify(payload), // aws4 looks for body; axios for data\r\n            path: parseURL(url).pathname,\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            }\r\n        },\r\n            {\r\n                // assumes user has authenticated and we have called\r\n                // AWS.config.credentials.get to retrieve keys and\r\n                // session tokens\r\n                secretAccessKey: process.env.REACT_APP_ACCESS,\r\n                accessKeyId: process.env.REACT_APP_KEY\r\n                //sessionToken: AWS.config.credentials.sessionToken\r\n            })\r\n          \r\n          delete signedRequest.headers['Host']\r\n          delete signedRequest.headers['Content-Length']\r\n          \r\n          \r\n          return axios(signedRequest)\r\n    }catch(e){\r\n        console.log(e);\r\n        throw e;\r\n    }\r\n  };\r\n\r\n/**\r\n * Event - GET request to a AWS auth URL\r\n * Base API URL (REACT_APP_BASE_API_URL) and REGION (REACT_APP_REGION) are pulled from environment file settings\r\n * @param {string} path \r\n * @param {Array} req \r\n */\r\n    export const _get = (path) => {\r\n        try {\r\n            return _getApiClient(path);\r\n        } catch (e) {\r\n            console.log(e.message);\r\n            return {error: true, message: e.message, e: e};\r\n        }\r\n    };\r\n\r\n    export const _getExternal = (path) => {\r\n        try {\r\n            return axios.get(path);\r\n        } catch (e) {\r\n            console.log(e.message);\r\n            return {error: true, message: e.message, e: e};\r\n        }\r\n    };\r\n/**\r\n * Event - POST a request to a AWS auth URL\r\n * Base API URL (REACT_APP_BASE_API_URL) and REGION (REACT_APP_REGION) are pulled from environment file settings\r\n * @param {string} path \r\n * @param {Array} req \r\n */\r\n    export const _post = (path, req) => {\r\n        try {\r\n            return _postApiClient(path, req);\r\n        } catch (e) {\r\n            return {error: true, message: e.message, e: e};\r\n        }\r\n    };\r\n/**\r\n * Event - postIAM a request to a AWS auth URL\r\n * Base API URL (REACT_APP_BASE_API_URL) and REGION (REACT_APP_REGION) are pulled from environment file settings\r\n * @param {string} path \r\n * @param {Array} req \r\n */\r\n    export const postIAM = async (path, req)  => {\r\n        try {\r\n            const resp = generateApiClient(process.env.REACT_APP_BASE_API_URL, process.env.REACT_APP_REGION, path, 'POST');\r\n            return await resp.apigClient.invokeApi(resp.args.pathParams, resp.args.pathTemplate, resp.args.method, resp.args.additionalParams, req);\r\n        } catch (e) {\r\n            console.log(e)\r\n            return {error: true, message: e.message, e: e};\r\n        }\r\n    };\r\n/**\r\n * Event - getIAM a request to a AWS auth URL\r\n * Base API URL (REACT_APP_BASE_API_URL) and REGION (REACT_APP_REGION) are pulled from environment file settings\r\n * @param {string} path\r\n */\r\n    export const getIAM = async (path) => {\r\n        try {\r\n            const resp = generateApiClient(process.env.REACT_APP_BASE_API_URL, process.env.REACT_APP_REGION, path, 'GET');\r\n            return await resp.apigClient.invokeApi(resp.args.pathParams, resp.args.pathTemplate, resp.args.method, resp.args.additionalParams, resp.args.body);\r\n        } catch (e) {\r\n            return {error: true, message: e.message, e: e};\r\n        }\r\n    };\r\n\r\n    export const _postExternal = (path, req) => {\r\n        try {\r\n            return axios.post(path, req);\r\n        } catch (e) {\r\n            return {error: true, message: e.message, e: e};\r\n        }\r\n    };\r\n    export const _postOptions = (path, req, options) => {\r\n        try {\r\n            return axios.post(path, req, options);\r\n        } catch (e) {\r\n            return {error: true, message: e.message, e: e};\r\n        }\r\n    };\r\n\r\n    export const _putOptions = (path, req, options) => {\r\n        try {\r\n            return axios.put(path, req, options);\r\n        } catch (e) {\r\n            return {error: true, message: e.message, e: e};\r\n        }\r\n    };\r\n\r\n    export const _getApiClient = async (path) => {\r\n        try {\r\n            const resp = generateApiClient(process.env.REACT_APP_BASE_API_URL, process.env.REACT_APP_REGION, path, 'GET')\r\n            return await resp.apigClient.invokeApi(resp.args.pathParams, resp.args.pathTemplate, resp.args.method, resp.args.additionalParams, resp.args.body);\r\n        } catch (e) {\r\n            return {error: true, message: e.message, e: e};\r\n        }\r\n    };\r\n\r\n    export const _postApiClient = async (path, req) => {\r\n        try {\r\n            const resp = generateApiClient(process.env.REACT_APP_BASE_API_URL, process.env.REACT_APP_REGION, path, 'POST');\r\n            return await resp.apigClient.invokeApi(resp.args.pathParams, resp.args.pathTemplate, resp.args.method, resp.args.additionalParams, req);\r\n        } catch (e) {\r\n            console.log(e)\r\n            return {error: true, message: e.message, e: e};\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import ReactGA from \"react-ga\";\r\n/**\r\n * initGA - init Google Analyitics\r\n */\r\nexport const initGA = () => {\r\n    ReactGA.initialize(process.env.REACT_APP_GA, { testMode: (process.env.REACT_APP_STAGE === \"dev\" ? true : false) });\r\n    \r\n};\r\n/**\r\n * PageView - window.location.hash.replace('#','')\r\n */\r\nexport const PageView = () => {\r\n    const path = window.location.pathname;\r\n    ReactGA.pageview(path);\r\n};\r\n\r\n\r\n\r\n\r\n/**\r\n * Event - Add custom tracking event. Track in HubSpot and Google Analyitics\r\n * @param {string} category \r\n * @param {string} action \r\n * @param {string} label \r\n * @param {string} value \r\n */\r\nexport const Event = (category, action, label, value) => {\r\n    ReactGA.event({\r\n      category: category,\r\n      action,\r\n      label,\r\n      value\r\n    });\r\n  };\r\n\r\n\r\n  export const ModalView = (v) => {\r\n    ReactGA.modalview(v);\r\n};\r\n\r\nexport const Timing = (category, variable, value, label) => {\r\n    ReactGA.timing({\r\n        category: category,\r\n        variable,\r\n        value, // in milliseconds\r\n        label\r\n    });\r\n};","export default __webpack_public_path__ + \"static/media/about.192efbf9.png\";"],"sourceRoot":""}